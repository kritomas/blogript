openapi: 3.0.0
info:
  title: Blogript API
  description: Blogript API Docs
  version: "1.0.0"
#servers:
  #- url:

paths:
  /status:
    get:
      summary: Whether the API is online or not
      responses:
        '200':
          description: The API server is online

  /blog:
    get:
      summary: Get all posts
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

    post:
      summary: Create a new post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posting'
      responses:
        '201':
          description: Post created successfully
  /blog/[id]:
    get:
      summary: Get post with specified id
      responses:
        '200':
          description: The post with specified id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

    delete:
      summary: Delete a post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareUserID'
      responses:
        '200':
          description: Post deleted successfully
    patch:
      summary: Update a post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posting'
      responses:
        '200':
          description: Post updated successfully
  /user:
    get:
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: UserID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BareUserID'
    put:
      summary: Login (same as GET)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: UserID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BareUserID'

    post:
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BareUserID'

components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
        author:
          type: string
        content:
          type: string
        creation_date:
          type: date
    Posting:
      type: object
      properties:
        user_id:
          type: UUID
        content:
          type: string
    BareUserID:
      type: object
      properties:
        user_id:
          type: UUID
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string